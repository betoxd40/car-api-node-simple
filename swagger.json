{
  "swagger": "2.0",
  "info": {
    "description": "Nodejs API",
    "version": "1.0.0",
    "title": "Car Test API"
  },
  "host": "locahost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Car",
      "description": "Everything about your car"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "Find all the cars",
        "description": "Returns all the cars",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "400": {
            "description": "error message"
          }
        }
      },
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Add a new car to the inventory",
        "description": "",
        "operationId": "addCar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Items object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Car"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "420": {
            "description": "error message"
          }
        }
      }
    },
    "/{carId}": {
      "put": {
        "tags": [
          "Car"
        ],
        "summary": "Edit the car by id",
        "description": "Edit all the properties",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "error message"
          }
        }
      },
      "patch": {
        "tags": [
          "Car"
        ],
        "summary": "Edit the car by id",
        "description": "Edit all the properties",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "error message"
          }
        }
      },
      "delete": {
        "tags": [
          "Car"
        ],
        "summary": "Edit the car by id",
        "description": "Edit all the properties",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "error message"
          }
        }
      }
    }
  },
  "definitions": {
    "Car": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "make": {
          "type": "string"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "model": {
          "type": "string"
        },
        "fuelType": {
          "type": "string"
        },
        "trim": {
          "type": "string"
        },
        "colors": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}